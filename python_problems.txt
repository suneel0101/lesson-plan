# Python Warm Up and Diagnostic

1. Write a function that takes prints all the even numbers between 1 and 10,000. This reviews FOR LOOPS, IF CONDITIONS and PRINTING

2a. Write a function that returns a list of the numbers between 1 and 10,000 that are divisible by 3. This reviews basic use of LISTS.

2b. The same as 2a, but use Python list comprehensions

3. Write a function 'get_max' that takes a list of numbers and returns the max of those numbers, don't use the max() function.

4. Write a function 'is_odd_or_div_by_7' that returns True if a number is odd or divisble by 7 and False otherwise.

5. Use 'is_odd_or_div_by_7' and list comprehensions to write a function 'get_sublist_of_numbers_odd_or_div_by_7' that takes in a list and returns a sublist of those numbers that are either odd or divisible by 7.

6. Given a list of food orders, e.g. ["burger", "fries", "burger", "tenders", "apple pie"], write a function 'get_aggregate_order_counts' that takes the list
and returns a dictionary with the different dishes as keys and the number of times they appear in the list as the values. For example,

It takes ["burger", "fries", "burger", "tenders", "apple pie"] and outputs
{
   "burger": 2,
   "fries": 1,
   "tenders": 1,
   "apple pie": 1
}

7. Write a function 'get_most_popular_order_data' that takes a list of orders but instead of returning a dictionary with the counts, it just outputs a tuple: the dish that appears the most in the list and the number of times it appears in the list. So the output given the example would be ("burger", 2)

# Data Set Worksheet 1

1. Using csv library, read in data from https://raw.githubusercontent.com/suneel0101/data/master/classic-rock/classic-rock-song-list.csv

2a. How many songs are from 1981?

2b. How many songs are from before 1984

3. What is the earliest release year in the data?
HINT: You might have to account for/clean up dirty data

4. What are the top 20 songs by play count
HINT: use builtin sorted() function
Documentation here: https://wiki.python.org/moin/HowTo/Sorting

5. Who are the top 10 most prolific artists in the data along with the number of their songs that appear in the data?

6. How many different artists appear in the data?

7. How songs does 'Rock' appear in the title of?

8. Which word appears the most in the song titles?
